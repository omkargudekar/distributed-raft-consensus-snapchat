option java_package= "com.distsc.comm.protobuf";
option java_outer_classname = "MessageProto";



message Request
{
	enum MessageHeader
	{
		AppendEntriesMsg=1;
		AappendEntriesResultMsg=2;
		RequestVoteMsg=3;
		RequestVoteResultMsg=4;
		NodeDiscoveryMsg=5;
		ClientMessageMsg=6;
	}
	optional MessageHeader messageHeader = 1 [default = AppendEntriesMsg];
	optional Payload payload=2;
}


message Payload
{
	optional AppendEntries appendEntries=1;
	optional AppendEntriesResult appendEntriesresult=2;
	optional RequestVote requestVote=3;
	optional RequestVoteResult requestVoteResult=4;
	optional ClientMessage clientMessage=5;
	optional NodeDiscovery nodeDiscovery=6;
}
message AppendEntries
{
	optional int32 term=1;
	optional string leaderId=2;
	optional int32 prevLogIndex=3;
	optional int32 prevLogTerm=4;
	repeated string entries=5;
	optional bool leaderCommit=6;
}


message AppendEntriesResult
{
	
	optional int32 term=1;
	optional bool success=2;
	optional string senderNodeId = 3;
}

message RequestVote
{
	optional int32 term=1;
	optional string candidateId=2;
	optional int32 lastLogIndex=3;
	optional int32 lastLogTerm=4;

}
message RequestVoteResult
{
	optional int32 term=1;
	optional bool voteGranted=2;
	optional string senderNodeId = 3;
}


message ClientMessage
{
	optional string senderUserName = 1;
	optional string receiverUserName = 2;
	optional string senderMsgText = 3;
	optional string senderMsgImageName = 4;
	optional bytes 	senderMsgImageBytes = 5;
	optional string senderMsgChecksumMsgText = 6;
	optional string senderMsgChecksumImageBytes = 7;
	optional string messageTimestamp=8;
	enum ClientMessageType
	{
	 	LOGIN = 1;
	 	MESSAGE = 2;
		ACKNOWLEDGE=3;
		ERROR=4;
		LOGOUT=5;
		LOGIN_SUCCESS=6;
    }

    enum ClientMessageErrorType
    {
    	MESSAGE_CORRUPT=1;
    	DELIVERY_FAIL=2;
    	MESSAGE_SIZE=3;
    	INVALID_LOGIN=4;
    }
    optional ClientMessageType clientMessageType = 9 [default = LOGIN];
    optional ClientMessageErrorType clientMessageErrorType = 10[default = INVALID_LOGIN];

    
}

message NodeDiscovery
{

    enum NodeDiscoveryMessageType
    {
    	REQUEST_CONNECTION=1;
    	RESPONSE_CONNECTION_ACCEPTED=2;
    	RESPONSE_CONNECTION_REJECTED=3;

    }

    optional string NODE_ID=1;
    optional string NODE_IP=2;
   	optional int32 NODE_PORT=3;

    optional NodeDiscoveryMessageType nodeDiscoveryMessageType=4 [default = REQUEST_CONNECTION];
}
    

